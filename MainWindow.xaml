<ui:FluentWindow
    x:Class="Caro.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:game="clr-namespace:Caro.CaroGame"
    xmlns:helpers="clr-namespace:Caro.Helpers"
    xmlns:local="clr-namespace:Caro"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:ui="http://schemas.lepo.co/wpfui/2022/xaml"
    x:Name="Root"
    Title="MainWindow"
    Width="800"
    Height="600"
    d:DataContext="{d:DesignInstance Type=local:MainWindow,
                                     IsDesignTimeCreatable=False}"
    ui:Design.Background="{DynamicResource ApplicationBackgroundBrush}"
    ui:Design.Foreground="{DynamicResource TextFillColorPrimaryBrush}"
    Foreground="{DynamicResource TextFillColorPrimaryBrush}"
    Loaded="Window_Loaded"
    PreviewKeyDown="Window_PreviewKeyDown"
    SizeChanged="Window_SizeChanged"
    WindowCornerPreference="Default"
    WindowStartupLocation="CenterScreen"
    mc:Ignorable="d">

    <ui:FluentWindow.Resources>
        <ResourceDictionary>
            <DataTemplate x:Key="EmptyCellTemplate" />
            <DataTemplate x:Key="XCellTemplate">
                <Canvas Name="parent" Margin="8">
                    <Line
                        Stroke="Blue"
                        StrokeThickness="2"
                        X1="0"
                        X2="{Binding ElementName=parent, Path=ActualWidth}"
                        Y1="0"
                        Y2="{Binding ElementName=parent, Path=ActualHeight}" />
                    <Line
                        Stroke="Blue"
                        StrokeThickness="2"
                        X1="0"
                        X2="{Binding ElementName=parent, Path=ActualWidth}"
                        Y1="{Binding ElementName=parent, Path=ActualHeight}"
                        Y2="0" />
                </Canvas>
            </DataTemplate>
            <DataTemplate x:Key="OCellTemplate">
                <Canvas Name="parent" Margin="8">
                    <Ellipse
                        Width="{Binding ElementName=parent, Path=ActualWidth}"
                        Height="{Binding ElementName=parent, Path=ActualHeight}"
                        Stroke="Red"
                        StrokeThickness="2" />
                </Canvas>
            </DataTemplate>

            <ControlTemplate x:Key="CellContainer" TargetType="{x:Type ListViewItem}">
                <Border
                    x:Name="Border"
                    Padding="{TemplateBinding Padding}"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    SnapsToDevicePixels="true">
                    <ContentPresenter />
                </Border>
                <ControlTemplate.Triggers>
                    <MultiTrigger>
                        <MultiTrigger.Conditions>
                            <Condition Property="IsEnabled" Value="True" />
                            <Condition Property="IsMouseOver" Value="True" />
                        </MultiTrigger.Conditions>
                        <Setter TargetName="Border" Property="Background" Value="{DynamicResource ListViewItemBackgroundPointerOver}" />
                    </MultiTrigger>
                    <Trigger Property="IsFocused" Value="True">
                        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>
        </ResourceDictionary>
    </ui:FluentWindow.Resources>

    <DockPanel LastChildFill="True">
        <ui:TitleBar
            x:Name="TitleBar"
            Title="Caro Game"
            Height="30"
            DockPanel.Dock="Top">
            <ui:TitleBar.Icon>
                <ui:ImageIcon Source="pack://application:,,,/icon.ico" />
            </ui:TitleBar.Icon>
        </ui:TitleBar>
        <Grid>
            <Grid
                x:Name="MainContent"
                Margin="20"
                Visibility="{Binding GameStarted, Converter={StaticResource InversibleBooleanToVisibilityConverter}, ConverterParameter=Normal}">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>

                <Border
                    Grid.Row="0"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    BorderBrush="Gray"
                    BorderThickness="1"
                    Visibility="{Binding GameStarted, Converter={StaticResource InversibleBooleanToVisibilityConverter}, ConverterParameter=Normal}">
                    <ListView x:Name="Board" SelectionMode="Single">
                        <ListView.ItemsPanel>
                            <ItemsPanelTemplate>
                                <Grid x:Name="BoardTemplate" Loaded="BoardTemplate_Loaded" />
                            </ItemsPanelTemplate>
                        </ListView.ItemsPanel>
                        <ListView.ItemContainerStyle>
                            <Style BasedOn="{StaticResource {x:Type ListViewItem}}" TargetType="{x:Type ListViewItem}">
                                <Setter Property="Padding" Value="0" />
                                <Setter Property="Margin" Value="0" />
                                <Setter Property="BorderBrush" Value="Gray" />
                                <Setter Property="BorderThickness" Value="1" />
                                <Setter Property="Template" Value="{StaticResource CellContainer}" />

                                <EventSetter Event="PreviewMouseLeftButtonDown" Handler="ListViewItem_PreviewMouseLeftButtonDown" />

                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsHighlighted}" Value="True">
                                        <Setter Property="Background" Value="{Binding CurrentPlayer, ElementName=Root, Converter={StaticResource PlayerToColorConverter}}" />
                                        <Setter Property="BorderBrush" Value="Black" />
                                        <Setter Property="Opacity" Value="0.7" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </ListView.ItemContainerStyle>
                        <ListView.ItemTemplate>
                            <DataTemplate DataType="local:Cell">
                                <ContentControl
                                    x:Name="content"
                                    Content="{Binding}"
                                    ContentTemplate="{StaticResource EmptyCellTemplate}" />
                                <DataTemplate.Triggers>
                                    <DataTrigger Binding="{Binding PlayedBy}" Value="{x:Static game:Player.X}">
                                        <Setter TargetName="content" Property="ContentTemplate" Value="{StaticResource XCellTemplate}" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding PlayedBy}" Value="{x:Static game:Player.O}">
                                        <Setter TargetName="content" Property="ContentTemplate" Value="{StaticResource OCellTemplate}" />
                                    </DataTrigger>
                                </DataTemplate.Triggers>
                            </DataTemplate>
                        </ListView.ItemTemplate>
                    </ListView>
                </Border>

                <StackPanel
                    x:Name="Other"
                    Grid.Row="1"
                    Margin="0,20,0,0">
                    <ui:TextBlock HorizontalAlignment="Center" Visibility="{Binding GameOver, Converter={StaticResource InversibleBooleanToVisibilityConverter}, ConverterParameter=Inverted}">
                        <Run>
                            <Run.Style>
                                <Style TargetType="Run">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding CurrentPlayer}" Value="{x:Static game:Player.X}">
                                            <Setter Property="Text" Value="Player X" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding CurrentPlayer}" Value="{x:Static game:Player.O}">
                                            <Setter Property="Text" Value="Player O" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Run.Style>
                        </Run>
                        <Run Text="turn" />
                    </ui:TextBlock>
                    <ui:TextBlock HorizontalAlignment="Center" Visibility="{Binding GameOver, Converter={StaticResource InversibleBooleanToVisibilityConverter}, ConverterParameter=Normal}">
                        <Run Text="Game over," />
                        <Run>
                            <Run.Style>
                                <Style TargetType="Run">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Winner}" Value="{x:Static game:Player.X}">
                                            <Setter Property="Text" Value="Player X wins" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Winner}" Value="{x:Static game:Player.O}">
                                            <Setter Property="Text" Value="Player O wins" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Winner}" Value="{x:Static game:Player.None}">
                                            <Setter Property="Text" Value="Draw" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Run.Style>
                        </Run>
                    </ui:TextBlock>

                    <StackPanel
                        Margin="0,12,0,0"
                        HorizontalAlignment="Center"
                        Orientation="Horizontal">
                        <ui:Button
                            HorizontalAlignment="Center"
                            Click="Restart_Click"
                            Content="New game" />
                        <ui:Button
                            Margin="12,0,0,0"
                            HorizontalAlignment="Center"
                            Click="Open_Click"
                            Content="Open" />
                        <ui:Button
                            Margin="12,0,0,0"
                            HorizontalAlignment="Center"
                            Click="Save_Click"
                            Content="Save"
                            Visibility="{Binding GameOver, Converter={StaticResource InversibleBooleanToVisibilityConverter}, ConverterParameter=Inverted}" />
                    </StackPanel>

                </StackPanel>
            </Grid>

            <StackPanel
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                d:Visibility="Collapsed"
                Orientation="Vertical"
                Visibility="{Binding GameStarted, Converter={StaticResource InversibleBooleanToVisibilityConverter}, ConverterParameter=Inverted}">
                <ui:Button
                    Width="100"
                    HorizontalAlignment="Center"
                    Click="Restart_Click"
                    Content="New game" />
                <ui:Button
                    Width="100"
                    Margin="0,12,0,0"
                    HorizontalAlignment="Center"
                    Click="Open_Click"
                    Content="Open" />
            </StackPanel>
        </Grid>
    </DockPanel>
</ui:FluentWindow>
